{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YACnE,6BAAKL,EAAMG,QAAQG,OACnB,4BAAKN,EAAMG,QAAQI,YCHXC,EAAW,SAAAR,GAEpB,OAAO,sBAAKC,UAAU,YAAf,UAECD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,OAHpB,QCDEO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIZ,UAAY,SACZa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCHG,E,kDAxCb,aAAe,IAAD,8BACZ,gBASFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SATtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAIf,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBARR,E,qDAad,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAET,SAAUmB,S,oBAG7C,WACE,MAAkCC,KAAKP,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YAIZW,EAAmBrB,EAASsB,QAAQ,SAAA5B,GAAO,OAC/CA,EAAQG,KAAK0B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAWW,YAAY,oBACtBC,aAAgBgB,KAAKhB,eAEtB,cAAC,EAAD,CAAUJ,SAAUqB,W,GAlCVI,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d0065f80.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = props =>(\r\n    <div className='card-container'>\r\n     <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"monster\" />\r\n     <h2>{props.monster.name}</h2>\r\n     <p>{ props.monster.email }</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component'\r\nexport const CardList = props => {\r\n    // console.log(props);\r\n    return <div className='card-list'>\r\n        {\r\n            props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))};\r\n    </div>;\r\n            \r\n};","// import * as react from \"react\";\r\nimport React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className = 'search'\r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n        // setState - asynchrosnous - so delays in value change \r\n    />\r\n)  ","// import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react/cjs/react.production.min';\n// import { string } from 'yargs';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.components';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n      // String : 'Hello Venkat'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange = (e) =>{\n    this.setState({ searchField: e.target.value});\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    // ^ this equivalent to saying \n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n    const filteredMonsters = monsters.filter( monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox placeholder='Search Monsters..' \n         handleChange = {this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}